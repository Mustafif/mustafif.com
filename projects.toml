[[projects]]
name = "TexCreate"
start = "2021-10-22"
technologies = ["Rust", "LaTeX", "CLI", "Asynchronous Programming"]
description = """
TexCreate is a LaTeX project creator developed by myself, Mustafif Khan since 2021 and is actively being maintained as my main portfolio project. 
The project started from my laziness; I found setting up LaTeX documents annoying whenever I had something new to do (I use LaTeX over word processors). 
I created a program to write a document for me using some prebuilt templates embedded in the program. When I wrote TexCreate, I found it very useful, and 
it saved me a lot of time, such as when I used it for a Physics tutorial with the Lachaise template.

TexCreate version 3 focuses on template modularity which in simple terms means that instead of the prebuilt templates being hardcoded into the program, they are 
instead managed by releases with a web service. Every new major version expands on the core idea of TexCreate as a LaTeX project creator that helps ease development, 
and with every new version the codebase increasingly becomes a lot more complex.
"""
gh = "https://github.com/Mustafif/texcreate"
https = "https://texcreate.mkproj.com"
subprojects = []

[[projects]]
name = "MufiZ"
start = "2024-01-24"
technologies = [
    "C",
    "Zig",
    "Memory Safety",
    "Bytecode Compiler",
    "Experimental Language",
]
description = """
MufiZ is an experimental dynamic object-oriented programming language, with its initial version 
written in completely C and followed the book Crafting Interpreters by Bob Nystrom. The language now 
is written with both C and Zig, with a lot of the frontend, and incremental features being written in Zig.
The language is growing to be more mature, and we are working towards a goal of making it a 
choice for mathematical computation. 
"""
gh = "https://github.com/Mustafif/MufiZ"
https = "https://mufiz.mustafif.com"
subprojects = []

[[projects]]
name = "QuickFetch"
start = "2024-06-24"
technologies = [
    "Rust", 
    "Networking", 
    "Asynchronous Programming", 
    "Concurrency"
]
description = """
This library is built to handle multiple requests within a Client (reqwest client which will handle it all under a Client Pool) , cache the response results, and handle these asynchronously.

The goal is to be a one-stop shop for handling local package manager development to handle multiple packages with a local cache to easily update, get and remove the different responses.
"""
gh = "https://github.com/Moka-Reads/QuickFetch"
subprojects = []